:PROPERTIES:
:CREATED: [2022-11-23 Wed]
:LAST_MODIFIED: [2022-12-07 Wed]
:END:

#+title: Org-roam-anki
#+author: Connor Clark

-----

#+html:<p align="center"><a href="https://www.gnu.org/software/emacs/"><img src="https://img.shields.io/static/v1?label=made for&message=emacs&color=7f5ab6"></a> <a href="https://github.com/cocl2625/org-roam-anki/pulls"><img src="https://img.shields.io/static/v1?label=contribute a&message=pr&color=248937"></a></p>

#+html:<div align="center">
Flashcard generator for org-roam
#+html:</div>

* Table of Contents
:PROPERTIES:
:TOC: :include all :depth 3 :ignore this
:END:

:CONTENTS:
- [[#introduction][Introduction]]
- [[#roadmap][Roadmap]]
- [[#dependencies][Dependencies]]
- [[#installation][Installation]]
- [[#usage][Usage]]
- [[#configuration][Configuration]]
:END:

* Introduction

Org-roam-anki is an emacs package that allows the user to export notes taken in org-roam to the flashcard application Anki without excessive formatting requirements that would subtract from the natural note-taking process.

The goal of org-roam-anki is to allow users to take notes in org-roam as they normally would, and then create flashcards from those notes by running a single command. Of course, some formatting requirements are needed, as this package is not able to read the user's mind (yet). However, these requirements are designed to be as unobtrusive as possible, and customizable to fit a variety of workflows. It is expected that users will be following the typical zettlekasten note-taking process that org-roam encourages, as the focused, single-topic nature of such notes makes them easier to extract information from.

* Roadmap

- [-] Create a working export process
  - [X] Create working standard card exports
  - [ ] Create working cloze card exports
- [ ] Allow customizing field names
- [X] Strip formatting marks from flashcards
- [ ] Properly handle lists
- [ ] Allow customizable cloze indicators
- [ ] Allow exporting entire databases
- [ ] Deprecate anki-editor dependency

* Dependencies

- Emacs v28.8
- Org-roam v2.2.2
- Anki-editor v0.3.3

The above version requirements are not necessarily strict, though they are the only versions tested and verified to work. The dependencies of each dependency are also obviously needed. Notably, this includes Anki and AnkiConnect. Instructions on how to get this setup working should be available on the [[https://github.com/louietan/anki-editor][anki-editor github page]].

* Installation

Users should install this package using their typical emacs package management technique. It will have to be installed directly from GitHub as the package is not yet available on MELPA or any other package archives. Additionally, users can simply clone this git repository and manually load the package with ~(require 'org-roam-anki ".../org-roam-anki.el")~.

* Usage

NOTE: Two primary features are still currently not functional -- the ability to export cloze cards and proper handling of lists. For now, just use standard cards.

Anki has two main types of notes -- standard and cloze. Standard cards function like traditional flashcards, with a term on the front and information about that term on the back. Cloze cards, on the other hand, only have one side. It shows some information with certain terms deleted, and the user is asked to recall those missing terms. Org-roam-anki allows for the creation of both types of card.

Standard cards are made when a headline with the trigger tag matches one defined in the variable ~org-roam-anki-standard-headings~. More information about this is detailed in the [[#configuration][configuration section]]. By default, these are "Definition", "Meaning", and "Translation". In this case, the parent headline (or node title if none is available) is used as the front, and each paragraph object under the matching headline is used as the back. Take for example, the following org-mode document:

#+begin_src org
,* Emacs
,** Definition :anki:
- The best text editor
#+end_src org

In this case, the front of the card will be "Emacs" and the back half of the card will be "The best text editor".

Cloze cards are made when a headline with the trigger tag containes a paragraph object that has verbatim text. This is made by surrounding terms with equals signs. The paragraph will be transferred as the card content with the verbatim terms set as the cloze deletions and the matching headline as optional context. For example, the following org-mode document:

#+begin_src org
,* Other Text Editors :anki:
Emacs competes with other text editors such as =vim= and =nano=.
#+end_src org

In this case, the card content will be "Emacs competes with other text editors such as {cloze 1} and {cloze 2}."

Users can run ~org-roam-anki-export-heading~ to export the current heading and all subheadings as anki flashcards and ~org-roam-anki-export-buffer~ to export all headings in the current buffer as anki flashcards (all of this given, of course, that the heading includes the trigger tag).

* Configuration

The following table outlines the variables provided for customizing org-roam-anki, their default values, and a short description of what each variable does.

| Name                            | Default Value                           | Descpription                                                                    |
|---------------------------------+-----------------------------------------+---------------------------------------------------------------------------------|
| org-roam-anki-standard-model    | "Basic (and reversed card)"             | Model to use when exporting standard anki cards                                 |
| org-roam-anki-cloze-model       | "Cloze"                                 | Model to use when exporting cloze anki cards                                    |
| org-roam-anki-decks             | '()                                     | List of deck names to attempt to match with tags in org-roam                    |
| org-roam-anki-fallback-deck     | "Default"                               | Deck to use if no matches are found in org-roam-anki-decks                      |
| org-roam-anki-trigger-tag       | "anki"                                  | Tag to trigger anki export                                                      |
| org-roam-anki-mask-tag          | "anki-mask"                             | Tag to mask anki trigger tag (needed due to tag inheritance)                    |
| org-roam-anki-export-extra-tags | t                                       | Whether to export additional org tags as anki tags                              |
| org-roam-anki-include-tags      | '()                                     | List of tags to include when exporting to anki -- empty list means include all  |
| org-roam-anki-exclude-tags      | '()                                     | List of tags to exclude when exporting to anki -- empty list means exclude none |
| org-roam-anki-standard-headings | '("Definition" "Meaning" "Translation") | List of tags to exclude when exporting to anki -- empty list means exclude none |
